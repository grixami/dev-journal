generator client {
  provider = "prisma-client-js"
  //output   = "../src/generated/prisma" // not needed
}

datasource db {
  provider = "postgresql"
  url      =  env("DATABASE_URL")
}

model User {
  id                Int         @id @default(autoincrement())
  email             String      @unique
  username          String      @unique
  password          String
  bio               String?     
  profilepic        String?      // will always be 128x128 b64 encoded
  createdAt         DateTime    @default(now())
  permissionlevel   Int         @default(0)                     // 0 for user, 1 for mod, 2 for admin
  

  posts     Post[]   @relation("UserPosts")
  comments Comment[]

  followers Follow[]  @relation("userFollowers")
  following Follow[]  @relation("userFollowing")
}

model Authcode {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  code              String
}

model Resetcode {
  id                Int         @id @default(autoincrement())
  code              String
  email             String      @unique
}

model Post {
  id                Int         @id @default(autoincrement())
  title             String
  desc              String
  content           String               // will be b64 encoded md file
  createdAt         DateTime    @default(now())
  isPublic          Int
  postTag           String      @default("")
  views             Int         @default(0)

  author    User        @relation("UserPosts", fields: [authorId], references: [id])
  authorId  Int
    
  comments Comment[]
}

model Comment {
  id            Int         @id @default(autoincrement())
  content       String
  createdAt     DateTime    @default(now())
  
  author        User        @relation(fields: [authorId], references: [id])
  authorId      Int

  post          Post        @relation(fields: [postId], references: [id])
  postId        Int
}

model Follow {
  id            Int         @id @default(autoincrement())

  follower      User        @relation("userFollowing", fields: [followerId], references: [id])
  followerId    Int

  following     User        @relation("userFollowers", fields: [followingId], references: [id])
  followingId   Int

  @@unique([followerId, followingId])
}